#include <GL/glut.h>
int ancho = 500, alto = 500, color;
double matriz[50][50] = {
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2,2,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,1,1,1,0,0,1,1,3,3,3,3,3,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,3,3,3,3,3,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,3,3,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,4,4,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,4,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,4,1,2,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,1,0,0,0,0,1,1,1,5,1,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1,1,0,5,5,5,1,1,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,2,2,2,2,2,3,1,2,2,3,5,1,1,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,3,3,3,3,4,4,2,2,1,1,2,2,2,5,1,1,1,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,2,2,2,2,2,2,2,2,4,4,1,2,2,2,2,3,3,1,1,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,0,0,0,0,1,3,2,2,4,4,4,4,4,2,2,2,1,2,2,2,2,3,3,1,1,0,0,0,0,0,0,0,0,0},
{0,0,0,0,1,1,1,1,5,5,5,2,2,2,2,1,1,0,0,1,1,1,3,3,3,4,4,4,4,4,4,1,2,2,2,2,3,1,2,3,1,0,0,0,0,0,0,0,0.0},
{0,0,0,1,1,3,5,5,5,5,2,2,2,2,2,2,3,1,1,2,2,2,2,2,2,2,2,3,4,4,1,2,2,2,2,3,3,1,2,3,1,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,1,1,1,1,5,2,2,2,2,2,3,3,3,2,2,2,2,2,2,2,2,2,2,2,3,1,2,2,2,3,3,1,2,2,2,3,1,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,1,1,1,3,3,3,3,3,1,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,1,1,2,2,2,2,3,1,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,1,2,2,2,2,2,2,3,1,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,1,2,2,2,2,2,2,2,2,3,1,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,1,2,2,2,2,2,2,2,3,1,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,1,2,3,3,2,2,2,2,3,3,1,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,1,3,3,3,3,2,2,2,3,3,1,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,1,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,3,3,3,3,3,3,3,3,1,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,1,1,1,2,2,2,2,2,2,2,2,3,1,1,2,2,2,2,2,2,1,3,3,3,3,3,3,3,3,1,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,1,2,2,3,5,1,1,2,2,2,2,2,2,2,2,1,1,0,1,2,2,2,2,2,1,3,3,3,3,3,3,3,1,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,1,1,1,2,2,3,1,1,2,2,2,2,2,2,2,2,2,3,5,1,1,2,2,2,2,2,1,3,1,3,3,3,3,1,1,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,1,3,3,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,2,2,2,2,2,2,1,3,1,1,1,1,1,1,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,3,1,3,3,1,3,1,0,0,0,0,0,0},
{0,0,0,0,0,0,1,1,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,3,3,3,1,1,1,1,1,1,1,0,0,0,0,0,0},
{0,0,0,0,0,1,2,2,2,2,2,2,1,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,2,2,2,3,1,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,1,3,1,2,3,3,3,3,1,1,2,3,3,2,2,3,2,2,2,3,2,2,2,1,2,2,2,2,2,2,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

void pintapixel(int x, int y, int color){
    glPointSize(20); // tama√±o del punto
    if(color==0){
        glColor3f(1,1,1);
    }
    if(color==1){
        glColor3f(0,0,0);
    }
    if(color==2){
        glColor3f(255,0.86,0);
    }
    if(color==3){
        glColor3f(0.868,0.66,0.104);
    }
    if(color==4){
        glColor3f(0.66,0.48,0.14);
    }
    if(color==5){
        glColor3f(0.552,0.54,0.504);
    }
    glBegin(GL_POINTS); // vertices de las primitivas como un solo punto
    glVertex2f(y,x); // certices de punto tipo float
    glEnd();
    glutSwapBuffers(); // envia informacion constantemente al buffer
}

void Imagen(){
    for(int n=0; n<50; n++){
        for(int k=0; k<50; k++){
            pintapixel(n,k, matriz[n][k]);
        }
    }
}

int main(int argc, char**argv){
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGBA);
    glutInitWindowSize(ancho, alto);
    glutInitWindowPosition(450,0);
    glutCreateWindow("Pikachu");
    gluOrtho2D(0,50,50,0); // punto exacto de la ventana
    glClearColor(1,1,1,0);
    glutDisplayFunc(Imagen);
    glutMainLoop();
    return 0;
}
